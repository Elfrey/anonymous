{"mappings":"AEAA,IAAA,2CAAe;;ADAf;AAWO,SAAS,0CAAU,EAAsB,EAAE;IAC9C,OAAO,KAAK,OAAO,CAAC,GAAG,CAAC;AAC5B;AAEO,SAAS,2CAAmB;IAC/B,OAAO,0CAAU,CAAA,GAAA,wCAAS,AAAD;AAC7B;AAMO,SAAS,0CAAa,EAAsB,EAAE;IACjD,OAAO,0CAAU,KAAK;AAC1B;;ADzBA;AGAA;ACAA;AAEO,SAAS,0CAA2B,GAAG,IAAc,EAAE;IAC1D,OAAO,CAAC,EAAE,GAAA,wCAAS,CAAC,UAAU,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC;AACpD;AAEO,SAAS,yCAAgB,GAAG,IAAc,EAAE;IAC/C,OAAO,CAAC,MAAM,EAAE,GAAA,wCAAS,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC;AACjD;AAEO,SAAS,0CAAa,GAAG,IAAc,EAAE;IAC5C,OAAO,KAAK,MAAM,CAAC,CAAA,IAAK,OAAO,MAAM;IACrC,OAAO,CAAC,QAAQ,EAAE,GAAA,wCAAS,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC;AAC7D;AAEO,SAAS,0CAAU,GAAG,IAAc,EAAE;IACzC,OAAO,CAAC,QAAQ,EAAE,GAAA,wCAAS,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC;AAC1D;;;ADdO,SAAS,yCAA0B,GAAW,EAAE;IACnD,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAA,GAAA,wCAAS,AAAD,GAAG;AACxC;AAEO,SAAS,0CAAW,GAAW,EAAE,KAAc,EAAE;IACpD,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAA,GAAA,wCAAQ,GAAG,KAAK;AAC7C;AAOO,SAAS,0CACZ,OAAgG,EAClG;IACE,MAAM,OAAO,QAAQ,IAAI;IACzB,QAAQ,KAAK,GAAG,QAAQ,KAAK,IAAI;IACjC,QAAQ,MAAM,GAAG,QAAQ,MAAM,IAAI,KAAK;IACxC,IAAI,QAAQ,MAAM,EAAE;QAChB,QAAQ,IAAI,GAAG,CAAA,GAAA,yCAAyB,EAAE,MAAM;QAChD,QAAQ,IAAI,GAAG,CAAA,GAAA,yCAAyB,EAAE,MAAM;IACpD,CAAC;IACD,IAAI,MAAM,OAAO,CAAC,QAAQ,OAAO,GAC7B,QAAQ,OAAO,GAAG,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,SAAW;QAC1D,OAAO,CAAC,OAAO,GAAG,CAAA,GAAA,yCAAyB,EAAE,MAAM,WAAW;QAC9D,OAAO;IACX,GAAG,CAAC;IAER,KAAK,QAAQ,CAAC,QAAQ,CAAC,CAAA,GAAA,wCAAQ,GAAG,MAAM;AAC5C;AAOO,SAAS,0CACZ,OAAmH,EACrH;IACE,MAAM,OAAO,QAAQ,IAAI;IACzB,QAAQ,IAAI,GAAG,CAAA,GAAA,yCAAyB,EAAE,SAAS,MAAM;IACzD,QAAQ,KAAK,GAAG,CAAA,GAAA,yCAAyB,EAAE,SAAS,MAAM;IAC1D,QAAQ,IAAI,GAAG,CAAA,GAAA,yCAAyB,EAAE,SAAS,MAAM;IACzD,QAAQ,UAAU,GAAG,QAAQ,UAAU,IAAI,IAAI;IAC/C,QAAQ,IAAI,GAAG,QAAQ,IAAI,IAAI;IAC/B,KAAK,QAAQ,CAAC,YAAY,CAAC,CAAA,GAAA,wCAAQ,GAAG,MAAM;AAChD;AAEO,SAAS,4CAAyB;IACrC,OAAO,KAAK,QAAQ,CAAC,GAAG,CAAC,QAAQ;AACrC;;;AEtDO,SAAS,4CAAO;IACnB,MAAM,OAAO,KAAK,IAAI;IACtB,MAAM,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,KAAK,MAAM;IACvD,OAAO,CAAC,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,UAAU,CAAC,UAAU;AAC7D;AAEO,SAAS,0CAAU,GAA8B,EAAE,YAAY,KAAK,EAAE;IACzE,IAAI,WAAW,OAAO,KAAK,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,IAAI,IAAI,kBAAkB,CAAC,GAAG;IACnF,OAAO,KAAK,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,IAAI,kBAAkB,CAAC,GAAG;AAC5D;AAEO,SAAS,0CAAS,GAA8B,EAAE,YAAY,KAAK,EAAE;IACxE,IAAI,WAAW,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,MAAM,IAAI,IAAI,kBAAkB,CAAC,GAAG;IACjF,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,IAAI,kBAAkB,CAAC,GAAG;AAC1D;AAEO,SAAS,0CAAM,YAAY,KAAK,EAAE;IACrC,IAAI,WAAW,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,MAAM,IAAI,EAAE,IAAI;IAC7D,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI;AACtC;;;ACnBA;ACAA,MAAM,yCAAmB;AACzB,MAAM,yCAAmB;AAElB,SAAS,0CAAW,GAAW,EAAE;IACpC,IAAI,CAAC,KAAK,OAAO;IACjB,OAAO,GAAG,CAAC,EAAE,CAAC,WAAW,KAAK,IAAI,KAAK,CAAC;AAC5C;AAEO,SAAS,0CAAU,GAAW,EAAE;IACnC,OAAO,IAAI,OAAO,CAAC,wCAAkB,CAAC,GAAG,IAAM,EAAE,WAAW;AAChE;AAEO,SAAS,0CAAU,GAAW,EAAE;IACnC,OAAO,IAAI,WAAW,GAAG,OAAO,CAAC,wCAAkB;AACvD;;;ADXO,SAAS,0CAAe,IAAY,EAAE,EAA6B,EAAE;IACxE,IAAI,WAAW,OAAO,CAAC,KAAK,EAAE;IAC9B,WAAW,cAAc,CAAC,MAAM;AACpC;AAEO,SAAS,2CAAyB;IACrC,MAAM,OAAO,CAAA,GAAA,yCAAQ,EAAE,CAAA,GAAA,wCAAQ;IAC/B,0CAAe,MAAM,SAAU,GAAG,EAAE,OAAO,EAAE;QACzC,MAAM,CAAC,EAAE,GAAA,wCAAS,CAAC,WAAW,EAAE,IAAI,CAAC;QACrC,MAAM,OAAO,QAAQ,IAAI;QACzB,OAAO,QAAQ,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK;IAChF;AACJ;;;AGfA,uDAEC,GACD,AAAO,SAAS,0CAAsB,WAAE,QAAO,WAAE,QAAO,eAAE,cAAc,CAAC,IAA8B,EAAE;IACrG,IAAI,MAAM,OAAO,CAAC,UACd,UAAU,QAAQ,MAAM,CAAC,CAAC,KAAK,OAAS;QACpC,GAAG,CAAC,KAAK,GAAG,CAAC;QACb,OAAO;IACX,GAAG,CAAC;IAGR,IAAK,MAAM,OAAO,QAAS;QACvB,MAAM,SAAS,OAAO,CAAC,IAAI;QAC3B,MAAM,OAAO,OAAO,IAAI,IAAK,CAAA,OAAO,YAAY,IAAI,KAAK,aAAa,YAAY,IAAI,CAAC,OAAO,YAAY,IAAI,AAAD,KAAM;QAEnH,IAAI,OAAO,OAAO,IAAI,IAAK,CAAA,OAAO,YAAY,IAAI,KAAK,aAAa,YAAY,IAAI,CAAC,OAAO,YAAY,IAAI,AAAD,KAAM;QACjH,IAAI,CAAC,EAAE,MAAM,MAAM,EAAE;YACjB,MAAM,QAAQ,EAAE;YAChB,MAAM,QAAQ,CAAC;YACf,OAAO,KAAK,CAAC,EAAE,CAAC,SAAS;QAC7B,CAAC;QAED,QAAQ,OAAO,CAAC;kBACZ;kBACA;YACA,UAAU,CAAA,MAAO;gBACb,IAAI,OAAO,QAAQ,EAAE,OAAO,QAAQ,CAAC;qBAChC,IAAI,YAAY,QAAQ,EAAE,YAAY,QAAQ,CAAC,KAAK;YAC7D;YACA,WAAW,CAAA,MAAO,OAAO,SAAS,GAAG,QAAQ,YAAY,SAAS,GAAG,KAAK,QAAQ,IAAI;QAC1F;IACJ;AACJ;;;;ADhCA;AEAA;AAEO,SAAS,0CAAS,GAAW,EAAE,IAAsC,EAAE;IAC1E,MAAM,CAAC,EAAE,GAAA,wCAAS,CAAC,CAAC,EAAE,IAAI,CAAC;IAC3B,IAAI,MAAM,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK;IACvC,OAAO,KAAK,IAAI,CAAC,QAAQ,CAAC;AAC9B;AAEO,SAAS,0CAAY,MAAc,EAAE;IACxC,MAAM,KAAK,CAAC,KAAa,OAAkC,0CAAS,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE;IACxF,OAAO,cAAc,CAAC,IAAI,OAAO;QAC7B,OAAM;YACF,OAAO;QACX;QACA,YAAY,KAAK;QACjB,cAAc,KAAK;IACvB;IACA,OAAO;AACX;;;;AElBA;AAEO,SAAS,0CAAc,GAA8B,EAAE;IAC1D,aAAa;IACb,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAA,GAAA,wCAAS,AAAD,KAAK,IAAI,KAAK;AAChD;AAEO,SAAS,yCAA2B,GAA8B,EAAE,GAAW,EAAE,GAAG,IAAc,EAAE;IACvG,KAAK,OAAO,CAAC;IACb,OAAO,IAAI,OAAO,CAAC,CAAA,GAAA,wCAAQ,GAAG,KAAK,IAAI,CAAC;AAC5C;AASO,SAAS,0CAAQ,GAA8B,EAAE,GAAW,EAAE,KAAc,EAAE;IACjF,OAAO,IAAI,OAAO,CAAC,CAAA,GAAA,wCAAQ,GAAG,KAAK;AACvC;;ADrBA;;AGAO,SAAS,0CAAe,KAAY,EAAE,aAAa,KAAK,EAAE;IAC7D,OAAO,KAAK,MAAM,CAAC,GAAG,CAAC,CAAA,QAAS,yCAAoB,OAAO,OAAO,aAAa,IAAI;AACvF;AAEO,SAAS,yCAAoB,KAAY,EAAE,KAAY,EAAE,aAAa,KAAK,EAAE;IAChF,OAAO,MAAM,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,KAAK,MAAM,EAAE,IAAK,CAAA,CAAC,cAAc,MAAM,SAAS,AAAD;AACpG;AAEO,SAAS,0CAAkB,KAAY,EAAE,YAAY,KAAK,EAAE;IAC/D,IAAI,WAAW,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK;IACvE,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,SAAS,KAAK;AAChD;;ADXA;;;;AAKO,SAAS,0CAAkB,KAAY,EAAE,QAAiB,EAAE;IAC/D,IAAI,MAAM,KAAK,EAAE,wCAAkB,MAAM,KAAK,EAAE;SAC3C,CAAA,GAAA,yCAAc,AAAD,EAAE,OAAO,IAAI,EAAE,OAAO,CAAC,CAAA,IAAK,wCAAkB,GAAG;AACvE;AAEA,SAAS,wCAAkB,KAAoB,EAAE,QAAiB,EAAE;IAChE,IAAI,UAAU,oCAAc;SACvB,oCAAc;AACvB;AAEA,SAAS,gCAAU,WAA6B,EAAE;IAC9C,OAAO,CAAC,gCAAU;AACtB;AAEA,SAAS,gCAAU,WAA6B,EAAE;IAC9C,OAAO,gBAAgB,MAAM,mBAAmB,CAAC,KAAK,IAAI,gBAAgB,MAAM,mBAAmB,CAAC,MAAM;AAC9G;AAEA,SAAS,iCAAW,WAA6B,EAAE;IAC/C,IAAI,gBAAgB,MAAM,mBAAmB,CAAC,KAAK,EAAE,OAAO,MAAM,mBAAmB,CAAC,WAAW;IACjG,IAAI,gBAAgB,MAAM,mBAAmB,CAAC,MAAM,EAAE,OAAO,MAAM,mBAAmB,CAAC,KAAK;IAC5F,OAAO;AACX;AAEA,SAAS,oCAAc,KAAoB,EAAE;IACzC,MAAM,cAAc,MAAM,WAAW;IACrC,IAAI,gCAAU,cAAc;IAC5B,MAAM,OAAO,iCAAW;IACxB,MAAM,MAAM,CAAC;QAAE,aAAa;IAAK;AACrC;AAEA,SAAS,oCAAc,KAAoB,EAAE;IACzC,MAAM,cAAc,MAAM,WAAW;IACrC,IAAI,gCAAU,gBAAgB,CAAC,CAAA,GAAA,wCAAS,EAAE,UAAU;IAEpD,IAAI,OAAO;IACX,IAAI,SAAS,MAAM,mBAAmB,CAAC,WAAW,EAAE,OAAO,MAAM,mBAAmB,CAAC,KAAK;SACrF,IAAI,SAAS,MAAM,mBAAmB,CAAC,KAAK,EAAE,OAAO,MAAM,mBAAmB,CAAC,MAAM;IAE1F,MAAM,MAAM,CAAC;QAAE,aAAa;IAAK;AACrC;AAEO,SAAS,0CAAe,GAAa,EAAE,IAAY,EAAE;IACxD,MAAM,QAAQ,IAAI,MAAM,CAAC,KAAK;IAC9B,IAAI,CAAC,SAAS,MAAM,cAAc,EAAE;IAEpC,MAAM,SAAS,mCAAa;IAC5B,OAAO,gBAAgB,CAAC,SAAS,IAAM,CAAA,GAAA,yCAAa,AAAD,EAAE;IACrD,KAAK,IAAI,CAAC,cAAc,MAAM,CAAC;AACnC;AAEA,SAAS,mCAAa,KAAY,EAAE;IAChC,MAAM,MAAM,SAAS,aAAa,CAAC;IACnC,MAAM,UAAU,CAAA,GAAA,wCAAa,EAAE;IAE/B,IAAI,SAAS,GAAG,CAAC,wBAAwB,EAAE,UAAU,YAAY,EAAE,CAAC,+EAC5B,EAAE,CAAA,GAAA,0DAAQ,AAAD,EAAE,aAAa,cAC9D,CAAC;IAEH,OAAO,IAAI,OAAO,CAAC,UAAU;AACjC;AAEO,SAAS,0CAAe,KAAoB,EAAE;IACjD,IAAI,MAAM,KAAK,EAAE,gBAAgB;IACjC,MAAM,cAAc,MAAM,WAAW;IACrC,MAAM,OAAO,iCAAW;IACxB,IAAI,SAAS,aAAa,MAAM,OAAO,CAAC,WAAW,GAAG;AAC1D;;;;;AExEA;;AAGO,SAAS,4CAAU;IACtB,GAAG,MAAM,CAAC,MAAM;AACpB;AAEO,SAAS,4CAAgB;IAC5B,OAAO,CAAA,GAAA,wCAAS,EAAE;AACtB;AAEO,SAAS,0CAAc,OAAe,EAAE,IAAY,EAAE;IACzD,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAA,GAAA,yCAAU,AAAD,EAAE,MAAM,CAAC;AAC3C;;;AJJO,SAAS,yCAAe,GAAsB,EAAW;IAC5D,IAAI,eAAe,SAAS,CAAC,IAAI,KAAK,EAAE,OAAO,CAAC,CAAC,CAAA,GAAA,wCAAO,AAAD,EAAE,KAAK;IAC9D,OAAO,CAAC,CAAC,CAAA,GAAA,wCAAO,AAAD,EAAE,IAAI,KAAK,EAAE;AAChC;AASO,eAAe,0CAAc,GAAsB,EAAoB;IAC1E,MAAM,WAAW,CAAC,yCAAe;IAEjC,IAAI,eAAe,SAAS,CAAC,IAAI,KAAK,EAAE,MAAM,CAAA,GAAA,yCAAM,EAAE,KAAK,YAAY;SAClE,MAAM,CAAA,GAAA,yCAAM,EAAE,IAAI,KAAK,EAAE,YAAY;IAE1C,IAAI,OAAO,MAAM,CAAC,GAAG,EAAE,UAAU,OAAO,MAAM,CAAC,GAAG,CAAC,MAAM;IAEzD,MAAM,QAAQ,eAAe,QAAQ,MAAM,IAAI,KAAK;IACpD,IAAI,OAAO,CAAA,GAAA,yCAAgB,EAAE,OAAO;IAEpC,OAAO;AACX;AAMO,SAAS,0CAAQ,GAAsB,EAAU;IACpD,MAAM,UAAU,CAAA,GAAA,yCAAO,EAAE;IACzB,MAAM,OAAO,eAAe,QAAQ,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,IAAI;IAC9D,IAAI,CAAC,MAAM,OAAO;IAElB,MAAM,QAAQ,AAAC,CAAA,CAAA,GAAA,yCAAY,GAAG,CAAC,KAAK,IAAI,EAAC,EAAG,IAAI;IAChD,OAAO,SAAS,CAAA,GAAA,yCAAY,EAAE,SAAS;AAC3C;;;;;AHvCO,SAAS,0CAA8B,IAAY,EAAE,OAA2B,EAAE;IACrF,CAAA,GAAA,yCAAqB,AAAD,EAAE;iBAClB;QACA,aAAa;YACT,MAAM,CAAA,SAAU,CAAA,GAAA,yCAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;YAC5C,MAAM;YACN,UAAU,CAAA,MAAO;gBACb,MAAM,KAAK,IAAI,IAAI,CAAC;gBACpB,MAAM,QAAQ,KAAK,MAAM,CAAC,GAAG,CAAC;gBAC9B,IAAI,OAAO,CAAA,GAAA,yCAAY,EAAE;YAC7B;YACA,WAAW,CAAC,KAAK,SAAW;gBACxB,MAAM,KAAK,IAAI,IAAI,CAAC;gBACpB,MAAM,QAAQ,KAAK,MAAM,CAAC,GAAG,CAAC;gBAC9B,OAAO,CAAC,CAAC,SAAS,CAAC,MAAM,cAAc,IAAK,CAAA,WAAW,SAAS,CAAC,CAAA,GAAA,wCAAc,AAAD,EAAE,SAAS,CAAA,GAAA,wCAAa,EAAE,MAAM,AAAD;YACjH;QACJ;QACA,SAAS;YAAC;YAAQ;SAAO;IAC7B;AACJ;AAEO,SAAS,0CAAc,KAAY,EAAE,IAAyB,EAAE;IACnE,IAAI,eAAe,YAAY,MAAM,CAAA,GAAA,wCAAc,EAAE,iBAAiB;IAEtE,IAAI,eAAe,MAAM;QACrB,CAAA,GAAA,yCAAgB,EAAE,OAAO,MAAM,cAAc;QAC7C,eAAe,IAAI;IACvB,CAAC;IAED,IAAI,cAAc,CAAA,GAAA,yCAAO,AAAD;AAC5B;;;;AQrCA;;;ACAO,SAAS,4CAAiB;IAC7B,OAAO,KAAK,MAAM,CAAC,aAAa,CAAC,KAAK;AAC1C;;;;ADIO,MAAM,kDAA2B;IACpC,WAAW,iBAAiB;QACxB,OAAO,YAAY,KAAK,CAAC,cAAc,EAAE;YACrC,IAAI;YACJ,OAAO,CAAA,GAAA,yCAAO,EAAE;YAChB,UAAU,CAAA,GAAA,yCAAW,EAAE;YACvB,OAAO;QACX;IACJ;IAEA,QAAQ,OAAqD,EAAE;QAC3D,MAAM,UAAU,CAAA,GAAA,yCAAO,EAAE;QACzB,MAAM,QAAQ,CAAA,GAAA,yCAAa,AAAD;QAC1B,MAAM,QAAQ,CAAA,GAAA,yCAAa,IAAI,GAAG,CAAC,CAAA,IAAM,CAAA;gBACrC,MAAM;gBACN,OAAO,AAAC,CAAA,KAAK,CAAC,EAAE,IAAI,EAAC,EAAG,IAAI;gBAC5B,aAAa,CAAA,GAAA,yCAAa,AAAD,EAAE,SAAS;YACxC,CAAA;QACA,OAAO;YACH,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ;mBACzB;QACJ;IACJ;IAEA,kBAAkB,IAAY,EAAE;QAC5B,KAAK,CAAC,iBAAiB,CAAC;QACxB,KAAK,IAAI,CAAC,wBAAwB,EAAE,CAAC,SAAS,IAAM,IAAI,CAAC,KAAK;IAClE;IAEA,MAAgB,cAAc,KAAY,EAAE,QAAiC,EAAE;QAC3E,CAAA,GAAA,yCAAU,AAAD,EAAE,SAAS;IACxB;AACJ;;;AEtCA;ACAO,SAAS,yCAAgB,IAAY,EAAE,MAAc,EAAE,WAAmB,EAAE,UAAU,KAAK,EAAE;IAChG,IAAI,SAAS,KAAK,IAAI,CAAC;IACvB,IAAI,SAAS,SAAS,OAAO,OAAO;IACpC,OAAO,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,KAAO;QAC9B,IAAI,GAAG,QAAQ,KAAK,KAAK,SAAS,IAAI,GAAG,WAAW,EAAE,QAClD,EAAE,IAAI,WAAW,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ;IACzD;AACJ;AAEO,MAAM,4CAAY;IAAE,gBAAgB,IAAM,CAAC;AAAE;;;;ACTpD;ACAA;;AAIO,SAAS,0CAAc,WAAE,QAAO,SAAE,MAAK,iBAAE,cAAa,EAA2B,EAAE;IACtF,IAAI,eAAe;IAEnB,MAAM,OAAO,KAAK,IAAI,CAAC,IAAI;IAE3B,IAAI,QAAQ,KAAK,CAAC,MAAM,IAAI,CAAA,GAAA,wCAAS,EAAE,cAAc;QACjD,MAAM,WAAW,KAAK,IAAI,CAAC,QAAQ,CAAC;QACpC,MAAM,WAAW,KAAK,IAAI,CAAC,QAAQ,CAAC;QACpC,MAAM,SAAS,IAAI,OAAO,CAAC,kBAAkB,EAAE,SAAS,CAAC,EAAE,SAAS,gBAAgB,CAAC,EAAE;QACvF,MAAM,UAAU,MAAM,IAAI,CAAC;QAC3B,IAAI,MAAM,CAAA,GAAA,wCAAc,EAAE,SAAS,QAAQ,+CAA+C,IAAI;QAC9F,CAAA,GAAA,wCAAc,EAAE,SAAS,QAAQ,IAAI,IAAI;IAC7C,CAAC;AACL;AAEO,SAAS,0CAAa,IAAa,EAAE,CAAC;;;ACnB7C;ACAA;AAEO,SAAS,0CACZ,GAAW,EACX,IAAsE,EACtE,IAAuC,EACvC,IAAc,EAChB;IACE,MAAM,OAAO,OAAO,SAAS,WAAW,OAAO,MAAM;IACrD,MAAM,OAAO,OAAO,SAAS,WAAW,OAAO,OAAO,SAAS,WAAW,OAAO,SAAS;IAC1F,MAAM,YAAY,OAAO,SAAS,YAAY,OAAO,OAAO,SAAS,YAAY,OAAO,QAAQ,KAAK;IAErG,GAAG,aAAa,CAAC,MAAM,CAAC,CAAA,GAAA,yCAAO,EAAE,KAAK,OAAO,MAAM;mBAAE;IAAU;AACnE;AAEO,SAAS,0CAAK,GAAW,EAAE,IAAuC,EAAE,IAAc,EAAE;IACvF,0CAAO,KAAK,WAAW,MAAM;AACjC;AAEO,SAAS,0CAAK,GAAW,EAAE,IAAuC,EAAE,IAAc,EAAE;IACvF,0CAAO,KAAK,QAAQ,MAAM;AAC9B;AAEO,SAAS,uCAAM,GAAW,EAAE,IAAuC,EAAE,IAAc,EAAE;IACxF,0CAAO,KAAK,SAAS,MAAM;AAC/B;;;;;;;ADjBO,SAAS,0CAAa,IAAa,EAAE;IACxC,CAAA,GAAA,yCAAe,AAAD,EAAE;QACZ,MAAM;QACN,MAAM;QACN,SAAS;QACT,QAAQ,IAAI;QACZ,SAAS;YACL,OAAO,CAAA,GAAA,yCAAyB,EAAE;YAClC,OAAO,CAAA,GAAA,yCAAyB,EAAE;YAClC,QAAQ,CAAA,GAAA,yCAAyB,EAAE;QACvC;IACJ;AACJ;AAGO,SAAS,0CAAc,IAAa,EAAE;IACzC,IAAI,MAAM;AACd;AAEA,SAAS,wCAAkB;IACvB,IAAI,MAAM;IACV,IAAI,KAAK,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,0CAA0C,MAAM;SAC1E,IAAI,KAAK,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,0CAA0C,MAAM;IACpF,IAAI,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,QAAQ,MAAM;IAE7C,MAAM,SAAS,CAAA,GAAA,wCAAe,IAAI,KAAK;IACvC,MAAM,UAAU,KAAK,IAAI,CAAC,QAAQ,CAAC;IAEnC,KAAK,QAAQ,CAAC,GAAG,CAAC,QAAQ,KAAK,KAAK;IACpC,CAAA,GAAA,yCAAI,AAAD,EAAE,iBAAiB;gBAAE;iBAAQ;IAAQ,GAAG,IAAI;AACnD;AAEO,SAAS,0CAAc,WAAE,QAAO,iBAAE,cAAa,SAAE,MAAK,EAA2B,EAAE;IACtF,MAAM,OAAO,KAAK,IAAI,CAAC,IAAI;IAC3B,MAAM,SAAS,AAAC,QAA4B,MAAM,EAAE;IACpD,MAAM,YAAY,CAAA,GAAA,wCAAS,EAAE;IAC7B,MAAM,QAAQ,CAAA,GAAA,wCAAS,EAAE;IAEzB,IAAI,UAAU,CAAC,OAAO,cAAc,IAAI,CAAC,CAAA,GAAA,wCAAa,EAAE,SAAS;QAC7D,MAAM,WAAW,MAAM,IAAI,CAAC;QAC5B,IAAI,SAAS,MAAM,EAAE;YACjB,MAAM,UAAU,SAAS,KAAK;YAC9B,IAAI,MAAM,QAAQ,IAAI,CAAC,mBAAmB;iBACrC,QAAQ,MAAM;QACvB,CAAC;IACL,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,eAAe;QACzB,MAAM,SAAS,CAAA,GAAA,wCAAS,EAAE;QAE1B,IAAI,QAAQ,KAAK,CAAC,MAAM,EAAE;YACtB,IAAI,OAAO;gBACP,MAAM,QAAQ,MAAM,IAAI,CAAC;gBAEzB,IAAI,MAAM,MAAM,EAAE;oBACd,MAAM,IAAI,CAAC,MAAM,MAAM;oBACvB,MAAM,MAAM;gBAChB,CAAC;gBAED,IAAI,WACA,MAAM,IAAI,CAAC,wDAAwD,WAAW,CAAC;gBAGnF,IAAI,WAAW,SACX,MAAM,IAAI,CAAC,sBAAsB,MAAM;YAE/C,OAAO,IAAI,WAAW,UAClB,MAAM,IAAI,CAAC,sBAAsB,KAAK,GAAG,MAAM;QAEvD,OAAO,IAAI,WAAW,UAClB,MAAM,IAAI,CAAC,iCAAiC,MAAM;IAE1D,CAAC;IAED,IAAI,CAAC,iBAAiB,QAAQ,KAAK,CAAC,MAAM,IAAI,SAAS,WAAW;QAC9D,MAAM,WAAW,KAAK,IAAI,CAAC,QAAQ,CAAC;QACpC,MAAM,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC;QAC/B,MAAM,QAAQ,IAAI,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE;QACzD,MAAM,MAAM,OAAO,+CAA+C,EAAE;QACpE,MAAM,SAAS,MAAM,IAAI,CAAC;QAC1B,CAAA,GAAA,wCAAc,EAAE,QAAQ,OAAO,KAAK,IAAI;IAC5C,CAAC;AACL;;;AE1FA;;AAIA,MAAM,6BAAO;AAEN,SAAS,0CAAc,WAAE,QAAO,iBAAE,cAAa,SAAE,MAAK,EAA2B,EAAE;IACtF,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;IAEpB,IAAI,CAAC,eACD;QAAA,IAAI,CAAA,GAAA,wCAAU,AAAD,EAAE,UAAU;YACrB,MAAM,YAAY,MAAM,IAAI,CAAC;YAC7B,UAAU,KAAK;YACf,UAAU,GAAG,CAAC,eAAe;YAE7B,IAAI,CAAA,GAAA,wCAAS,EAAE,cACX,MAAM,IAAI,CAAC,eAAe,WAAW,CAAC;YAG1C,MAAM,QAAQ,MAAM,IAAI,CAAC;YACzB,MAAM,IAAI,CAAC,MAAM,IAAI,GAAG,OAAO,CAAC,4BAAM;QAC1C,CAAC;IAAD,CACH;IAED,SAAS;IAET,MAAM,UAAU,MAAM,IAAI,CAAC;IAC3B,MAAM,aAAa,QAAQ,OAAO,CAAC,QAAQ;IAC3C,IAAI,QAAQ,MAAM,IAAI,YAClB,IAAI;QACA,MAAM,SAAU,aAAa,aAAsC;QACnE,IAAI,UAAU,CAAC,OAAO,cAAc,IAAI,CAAC,CAAA,GAAA,wCAAa,EAAE,SACpD,QAAQ,IAAI,CAAC,CAAA,GAAA,yCAAM,EAAE;IAE7B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC;IAClB;IAGJ,MAAM,WAAW,MAAM,IAAI,CAAC;IAC5B,MAAM,cAAc,QAAQ,OAAO,CAAC,QAAQ;IAC5C,IAAI,SAAS,MAAM,IAAI,aAAa,QAChC,IAAI;QACA,KAAK,MAAM,QAAQ,YAAa;YAC5B,MAAM,UAAU,aAAa,OAAgC;YAC7D,IAAI,WAAU,CAAC,QAAO,cAAc,IAAI,CAAC,CAAA,GAAA,wCAAa,EAAE,UACpD,SAAS,MAAM,CAAC,CAAC,gBAAgB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAA,GAAA,yCAAM,EAAE;QAEvF;IACJ,EAAE,OAAO,QAAO;QACZ,QAAQ,KAAK,CAAC;IAClB;AAER;;;AJzCO,MAAM,4CAAsB;AAC5B,MAAM,2CAAuB;AAC7B,MAAM,4CAAsB;AAE5B,SAAS,4CAA2B;IACvC,OAAQ,KAAK,MAAM,CAAC,EAAE;QAClB,KAAK;YACD,0CAAoB,GAAG,CAAC,CAAA,GAAA,yCAAY,AAAD;YACnC,yCAAqB,GAAG,CAAC,CAAA,GAAA,yCAAa,AAAD;YACrC,0CAAoB,GAAG,CAAC,CAAA,GAAA,yCAAa,AAAD;YACpC,KAAK;QACT,KAAK;YACD,wCAAwC;YACxC,0CAAoB,GAAG,CAAC,CAAA,GAAA,yCAAa,AAAD;YACpC,KAAK;IACb;IAEA,IAAI,CAAA,GAAA,yCAAS,AAAD,EAAE,SAAS,QACnB,0CAAoB,GAAG,CAAC,CAAA,GAAA,yCAAa,AAAD;AAE5C;AAEA,SAAS,iDAAuH;IAC5H,MAAM,IAAI,EAAE;IACZ,MAAM,IAAI,SAAU,GAAG,IAAW,EAAE;QAChC,EAAE,OAAO,CAAC,CAAA,IAAK,KAAK;IACxB;IACA,EAAE,GAAG,GAAG,CAAC,KAAkB,EAAE,IAAI,CAAC;IAClC,OAAO;AACX;;;AFpCA,MAAM,+BAAS;AAER,SAAS,0CAAkB,OAAoB,EAAE,IAAY,EAAE;IAClE,IAAI,QAAQ,KAAK,EAAE;IAEnB,MAAM,OAAO,KAAK,IAAI,CAAC,IAAI;IAC3B,MAAM,UAAU,QAAQ,OAAO;IAC/B,MAAM,QAAQ,YAAY,eAAe,CAAC;IAC1C,MAAM,gBAAgB,CAAC,SAAS,MAAM,cAAc,IAAI,CAAA,GAAA,wCAAc,AAAD,EAAE;IAEvE,IAAI,SAAS,CAAC,eAAe;QACzB,kCAAY,SAAS,OAAO;QAC5B,IAAI,CAAC,MAAM;YACP,IAAI,QAAQ,KAAK,CAAC,MAAM,IAAI,CAAA,GAAA,wCAAS,EAAE,UAAU;gBAC7C,MAAM,UAAU,KAAK,IAAI,CAAC;gBAC1B,QAAQ,IAAI,CAAC,gCAAgC,MAAM;gBACnD,IAAI,CAAA,GAAA,wCAAS,EAAE,cAAc,QAAQ,IAAI,CAAC,eAAe,WAAW,CAAC;YACzE,CAAC;YACD,IAAI,CAAA,GAAA,wCAAS,EAAE,WAAW,KAAK,IAAI,CAAC,uCAAuC,MAAM;YACjF,IAAI,CAAA,GAAA,wCAAS,EAAE,gBAAgB,KAAK,IAAI,CAAC,kCAAkC,MAAM;QACrF,CAAC;IACL,CAAC;IAED,CAAA,GAAA,yCAAmB,AAAD,EAAE;iBAAE;eAAS;QAAO,OAAO;uBAAM;IAAc;AACrE;AAEA,SAAS,kCAAY,OAAoB,EAAE,KAAY,EAAE,IAAY,EAAE;IACnE,MAAM,UAAU,QAAQ,OAAO;IAC/B,MAAM,QAAqB,IAAI;IAE/B,IAAI,QAAQ,KAAK,EAAE,MAAM,GAAG,CAAC,QAAQ,KAAK;IAC1C,IAAI,MAAM,IAAI,EAAE,MAAM,GAAG,CAAC,MAAM,IAAI;IAEpC,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,EAAE;QAChC,MAAM,QAAQ,KAAK,MAAM,CAAC,GAAG,CAAC,QAAQ,KAAK;QAC3C,MAAM,QAAQ,OAAO,OAAO,GAAG,CAAC,QAAQ,KAAK;QAC7C,IAAI,OAAO,MAAM,MAAM,GAAG,CAAC,MAAM,IAAI;IACzC,CAAC;IAED,IAAI,CAAC,MAAM,IAAI,EAAE;IAEjB,MAAM,UAAU,MAAM,IAAI,CAAC,OAAO,GAAG,CAAC,CAAA,IAAK,OAAO,MAAM,CAAC;IACzD,MAAM,SAAS,QAAQ,IAAI,CAAC;IAC5B,MAAM,SAAS,IAAI,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE;IACzC,MAAM,UAAU,CAAA,GAAA,yCAAM,EAAE;IACxB,MAAM,cAAc,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,wCAAwC,EAAE,QAAQ,WAAW,CAAC,GAAG,OAAO;IAE9G,CAAA,GAAA,wCAAc,EAAE,MAAM,QAAQ;AAClC;;;;;AQrDO,SAAS,0CAAkB,SAAoB,EAAE;IACpD,OAAO,UAAU,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK,UAAU,OAAO;AAC7E;;ADFA;;;AAIO,SAAS,0CAAoB,OAA8B,EAAE,IAAY,EAAE;IAC9E,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,EAAE;IACrC,IAAI,CAAC,cAAc,CAAC,WAAW,IAAI,EAAE;IAErC,KAAK,IAAI,CAAC,8BAA8B,IAAI,CAAC,WAAY;QACrD,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,WAAW;QACnC,MAAM,YAAY,WAAW,GAAG,CAAC;QACjC,IAAI,CAAC,aAAa,UAAU,cAAc,EAAE;QAE5C,MAAM,WAAW,CAAA,GAAA,wCAAa,EAAE;QAEhC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;YAChB,MAAM,WAAW,IAAI,CAAC,aAAa,CAAC;YACpC,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,MAAM,SAAS,mCAAa;YAE5B,OAAO,gBAAgB,CAAC,SAAS,CAAA,QAAS,0CAAoB,OAAO;YAErE,IAAI,QAAQ,OAAO,KAAK,CAAC;iBACpB,SAAS,WAAW,CAAC;QAC9B,OAAO,IAAI,CAAC,UAAU;YAClB,MAAM,KAAK,IAAI,CAAC,aAAa,CAAC;YAC9B,GAAG,WAAW,GAAG,CAAA,GAAA,yCAAM,EAAE;QAC7B,CAAC;IACL;AACJ;AAEA,SAAS,mCAAa,MAAe,EAAE;IACnC,MAAM,MAAM,SAAS,aAAa,CAAC;IACnC,MAAM,UAAU,SAAS,iBAAiB,cAAc;IAExD,IAAI,SAAS,GAAG,CAAC,gCACO,EAAE,SAAS,YAAY,EAAE,CAAC,gEAEpC,EAAE,CAAA,GAAA,0DAAQ,AAAD,EAAE,SAAS,qDAGlC,CAAC;IAED,OAAO,IAAI,OAAO,CAAC,UAAU;AACjC;AAEA,SAAS,0CAAoB,KAAiB,EAAE;IAC5C,MAAM,cAAc;IACpB,MAAM,eAAe;IAErB,IAAI,MAAM,QAAQ,IAAI,UAAU,KAAK,IAAI,UAAU,KAAK,CAAC,OAAO,IAAI,KAAK,MAAM,EAAE,OAC7E,CAAA,GAAA,0DAAiB,AAAD,EAAE,WAAW,OAAO,CAAC,CAAA,GAAA,0DAAa,AAAD;SAEjD,CAAA,GAAA,0DAAa,AAAD,EAAE;AAEtB;;;;;;;;;;AzB1CA,MAAM,IAAI,CAAC,QAAQ,IAAM;IACrB,CAAA,GAAA,wCAAqB;IAErB,CAAA,GAAA,yCAAe,AAAD,EAAE;QACZ,MAAM;QACN,MAAM;QACN,SAAS;IACb;IAEA,CAAA,GAAA,yCAAe,AAAD,EAAE;QACZ,MAAM;QACN,MAAM;QACN,SAAS,CAAC;QACV,UAAU,CAAA,GAAA,yCAAM;IACpB;IAEA,CAAA,GAAA,yCAAe,AAAD,EAAE;QACZ,MAAM;QACN,MAAM;QACN,SAAS,IAAI;QACb,QAAQ,IAAI;IAChB;IAEA,CAAA,GAAA,yCAAe,AAAD,EAAE;QACZ,MAAM;QACN,MAAM;QACN,SAAS,IAAI;QACb,QAAQ,IAAI;IAChB;IAEA,CAAA,GAAA,yCAAe,AAAD,EAAE;QACZ,MAAM;QACN,MAAM;QACN,SAAS,IAAI;QACb,QAAQ,IAAI;IAChB;IAEA,CAAA,GAAA,yCAAe,AAAD,EAAE;QACZ,MAAM;QACN,MAAM;QACN,SAAS,KAAK;QACd,QAAQ,IAAI;IAChB;IAEA,CAAA,GAAA,yCAAe,AAAD,EAAE;QACZ,MAAM;QACN,MAAM;QACN,SAAS,KAAK;QACd,QAAQ,IAAI;IAChB;IAEA,CAAA,GAAA,yCAAmB,AAAD,EAAE;QAChB,MAAM;QACN,MAAM,CAAA,GAAA,yCAAiB;IAC3B;IAEA,CAAA,GAAA,wCAAe,IAAI,GAAG,GAAG;wBACrB;uBACA;iBACA;IACJ;IAEA,MAAM,KAAK,CAAA,GAAA,yCAAI,AAAD;IAEd,IAAI,IAAI;QACJ,MAAM,EAAE,CAAC,iCAAiC,CAAA,GAAA,yCAA6B,AAAD;QACtE,MAAM,EAAE,CAAC,kBAAkB,CAAA,GAAA,yCAAc,AAAD;IAC5C,CAAC;IAED,CAAA,GAAA,yCAAuB;IACvB,CAAA,GAAA,yCAAmB,AAAD,EAAE;AACxB;AAEA,MAAM,IAAI,CAAC,SAAS,IAAM;IACtB,CAAA,GAAA,wCAAmB,EAAE,KAAK,IAAI,CAAC,IAAI;AACvC;AAEA,MAAM,EAAE,CAAC,uBAAuB,CAAA,GAAA,yCAAmB,AAAD;AAClD,MAAM,EAAE,CAAC,qBAAqB,CAAA,GAAA,yCAAiB,AAAD;AAC9C,MAAM,EAAE,CAAC,kBAAkB,CAAA,GAAA,yCAAc,AAAD;AACxC,MAAM,EAAE,CAAC,eAAe,CAAA,GAAA,yCAAa,AAAD","sources":["src/main.ts","../../../../Projects/foundry-ts/utils/foundry/module.ts","src/module.ts","../../../../Projects/foundry-ts/utils/foundry/settings.ts","../../../../Projects/foundry-ts/utils/foundry/path.ts","../../../../Projects/foundry-ts/utils/foundry/user.ts","../../../../Projects/foundry-ts/utils/handlebars.ts","../../../../Projects/foundry-ts/utils/string.ts","src/actor.ts","../../../../Projects/foundry-ts/utils/foundry/context.ts","../../../../Projects/foundry-ts/utils/foundry/i18n.ts","src/api.ts","../../../../Projects/foundry-ts/utils/foundry/flags.ts","src/token.ts","../../../../Projects/foundry-ts/utils/foundry/actor.ts","src/utils.ts","src/apps/names.ts","../../../../Projects/foundry-ts/utils/foundry/types.ts","src/chat.ts","../../../../Projects/foundry-ts/utils/jquery.ts","src/third.ts","src/third/dnd5e.ts","src/third/pf2e.ts","../../../../Projects/foundry-ts/utils/foundry/notifications.ts","src/third/wire.ts","src/tracker.ts","../../../../Projects/foundry-ts/utils/foundry/combatant.ts"],"sourcesContent":["import { getCurrentModule } from './@utils/foundry/module'\r\nimport { registerSetting, registerSettingMenu } from './@utils/foundry/settings'\r\nimport { isGM } from './@utils/foundry/user'\r\nimport { registerLocalizeHelper } from './@utils/handlebars'\r\nimport { getActorDirectoryEntryContext, onActorUpdate } from './actor'\r\nimport { getName, playersSeeName, toggleSeeName } from './api'\r\nimport { AnonymousNamesMenu } from './apps/names'\r\nimport { renderChatMessage } from './chat'\r\nimport { thirdPartyInitHooks, thirdPartyInitialization, thirdPartyReadyHooks } from './third'\r\nimport { preCreateToken, renderTokenHUD } from './token'\r\nimport { renderCombatTracker } from './tracker'\r\nimport { refresh } from './utils'\r\n\r\nHooks.once('init', () => {\r\n    registerLocalizeHelper()\r\n\r\n    registerSetting({\r\n        name: 'version',\r\n        type: String,\r\n        default: '',\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'names',\r\n        type: Object,\r\n        default: {},\r\n        onChange: refresh,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'token',\r\n        type: Boolean,\r\n        default: true,\r\n        config: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'rolls',\r\n        type: Boolean,\r\n        default: true,\r\n        config: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'criticals',\r\n        type: Boolean,\r\n        default: true,\r\n        config: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'cardContent',\r\n        type: Boolean,\r\n        default: false,\r\n        config: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'footer',\r\n        type: Boolean,\r\n        default: false,\r\n        config: true,\r\n    })\r\n\r\n    registerSettingMenu({\r\n        name: 'namesMenu',\r\n        type: AnonymousNamesMenu,\r\n    })\r\n\r\n    getCurrentModule().api = {\r\n        playersSeeName,\r\n        toggleSeeName,\r\n        getName,\r\n    }\r\n\r\n    const gm = isGM()\r\n\r\n    if (gm) {\r\n        Hooks.on('getActorDirectoryEntryContext', getActorDirectoryEntryContext)\r\n        Hooks.on('renderTokenHUD', renderTokenHUD)\r\n    }\r\n\r\n    thirdPartyInitialization()\r\n    thirdPartyInitHooks(gm)\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    thirdPartyReadyHooks(game.user.isGM)\r\n})\r\n\r\nHooks.on('renderCombatTracker', renderCombatTracker)\r\nHooks.on('renderChatMessage', renderChatMessage)\r\nHooks.on('preCreateToken', preCreateToken)\r\nHooks.on('updateActor', onActorUpdate)\r\n","import MODULE_ID from '~./src/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh'\r\n\r\ntype ReturnedModule<T extends Record<string, any> = Record<string, any>> = Module<T> | undefined\r\ntype ReturnedModuleApi<T extends Record<string, any> = Record<string, any>> = Module<T>['api'] | undefined\r\n\r\nexport function getModule(id: 'anonymous'): ReturnedModule<AnonymousApi>\r\nexport function getModule(id: 'idleuh'): ReturnedModule<IdleuhApi>\r\nexport function getModule(id: 'pf2e-hero-actions'): ReturnedModule<HeroActionsApi>\r\nexport function getModule(id: string): ReturnedModule\r\nexport function getModule(id: string | OwnModule) {\r\n    return game.modules.get(id)\r\n}\r\n\r\nexport function getCurrentModule() {\r\n    return getModule(MODULE_ID)!\r\n}\r\n\r\nexport function getModuleApi(id: 'anonymous'): ReturnedModuleApi<AnonymousApi>\r\nexport function getModuleApi(id: 'idleuh'): ReturnedModuleApi<IdleuhApi>\r\nexport function getModuleApi(id: 'pf2e-hero-actions'): ReturnedModuleApi<HeroActionsApi>\r\nexport function getModuleApi(id: string): ReturnedModuleApi\r\nexport function getModuleApi(id: string | OwnModule) {\r\n    return getModule(id)?.api\r\n}\r\n","export default 'anonymous'","import MODULE_ID from '~./src/module'\r\nimport { getSettingLocalizationPath } from './path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting(\r\n    options: Omit<SettingRegistration, 'choices'> & { choices?: string[] | Record<string, unknown> }\r\n) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register(MODULE_ID, name, options as SettingRegistration)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import MODULE_ID from '~./src/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export function isGM() {\r\n    const data = game.data as Game['data'] & { userId: string }\r\n    const user = data.users.find(x => x._id === data.userId)\r\n    return !!user && user.role >= CONST.USER_ROLES.GAMEMASTER\r\n}\r\n\r\nexport function getOwners(doc: foundry.abstract.Document, connected = false) {\r\n    if (connected) return game.users.filter(x => x.active && doc.testUserPermission(x, 'OWNER'))\r\n    return game.users.filter(x => doc.testUserPermission(x, 'OWNER'))\r\n}\r\n\r\nexport function getOwner(doc: foundry.abstract.Document, connected = false) {\r\n    if (connected) return game.users.find(x => x.active && doc.testUserPermission(x, 'OWNER'))\r\n    return game.users.find(x => doc.testUserPermission(x, 'OWNER'))\r\n}\r\n\r\nexport function getGM(connected = false) {\r\n    if (connected) return game.users.find(x => x.active && x.isGM)\r\n    return game.users.find(x => x.isGM)\r\n}\r\n","import MODULE_ID from '~./src/module'\r\nimport { camelCase } from './string'\r\n\r\nexport function registerHelper(name: string, fn: Handlebars.HelperDelegate) {\r\n    if (Handlebars.helpers[name]) return\r\n    Handlebars.registerHelper(name, fn)\r\n}\r\n\r\nexport function registerLocalizeHelper() {\r\n    const name = camelCase(MODULE_ID)\r\n    registerHelper(name, function (key, options) {\r\n        key = `${MODULE_ID}.templates.${key}`\r\n        const data = options.hash\r\n        return isEmpty(data) ? game.i18n.localize(key) : game.i18n.format(key, data)\r\n    })\r\n}\r\n","const CAMEL_CASE_REGEX = /[_ -]+([a-zA-Z0-9])/g\r\nconst SNAKE_CASE_REGEX = / +/g\r\n\r\nexport function capitalize(str: string) {\r\n    if (!str) return ''\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n\r\nexport function camelCase(str: string) {\r\n    return str.replace(CAMEL_CASE_REGEX, (_, c) => c.toUpperCase())\r\n}\r\n\r\nexport function snakeCase(str: string) {\r\n    return str.toLowerCase().replace(SNAKE_CASE_REGEX, '-')\r\n}\r\n","import { addSelectContextEntry } from './@utils/foundry/context'\r\nimport { localize } from './@utils/foundry/i18n'\r\nimport { flagsUpdatePath } from './@utils/foundry/path'\r\nimport { playersSeeName, toggleSeeName } from './api'\r\nimport { updateActorTokens } from './token'\r\nimport { refresh } from './utils'\r\n\r\nexport function getActorDirectoryEntryContext(html: JQuery, entries: ContextMenuEntry[]) {\r\n    addSelectContextEntry({\r\n        entries,\r\n        defaultData: {\r\n            name: choice => localize(`context.${choice}`),\r\n            icon: 'fa-solid fa-signature',\r\n            callback: $li => {\r\n                const id = $li.attr('data-document-id') as string\r\n                const actor = game.actors.get(id)\r\n                if (actor) toggleSeeName(actor)\r\n            },\r\n            condition: ($li, choice) => {\r\n                const id = $li.attr('data-document-id') as string\r\n                const actor = game.actors.get(id)\r\n                return !!actor && !actor.hasPlayerOwner && (choice === 'show' ? !playersSeeName(actor) : playersSeeName(actor))\r\n            },\r\n        },\r\n        choices: ['show', 'hide'],\r\n    })\r\n}\r\n\r\nexport function onActorUpdate(actor: Actor, data: Record<string, any>) {\r\n    let needsRefresh = getProperty(data, flagsUpdatePath('showName')) !== undefined\r\n\r\n    if ('ownership' in data) {\r\n        updateActorTokens(actor, actor.hasPlayerOwner)\r\n        needsRefresh = true\r\n    }\r\n\r\n    if (needsRefresh) refresh()\r\n}\r\n","/**\r\n * icons can be classes instead of html element\r\n */\r\nexport function addSelectContextEntry({ entries, choices, defaultData = {} }: ContextSelectEntryOptions) {\r\n    if (Array.isArray(choices)) {\r\n        choices = choices.reduce((acc, curr) => {\r\n            acc[curr] = {}\r\n            return acc\r\n        }, {} as ContextSelectEntryChoices)\r\n    }\r\n\r\n    for (const key in choices) {\r\n        const choice = choices[key]\r\n        const name = choice.name ?? (typeof defaultData.name === 'function' ? defaultData.name(key) : defaultData.name) ?? ''\r\n\r\n        let icon = choice.icon ?? (typeof defaultData.icon === 'function' ? defaultData.icon(key) : defaultData.icon) ?? ''\r\n        if (!$(icon).length) {\r\n            const $icon = $('<i></i>')\r\n            $icon.addClass(icon)\r\n            icon = $icon[0].outerHTML\r\n        }\r\n\r\n        entries.unshift({\r\n            name,\r\n            icon,\r\n            callback: $li => {\r\n                if (choice.callback) choice.callback($li)\r\n                else if (defaultData.callback) defaultData.callback($li, key)\r\n            },\r\n            condition: $li => choice.condition?.($li) ?? defaultData.condition?.($li, key) ?? true,\r\n        })\r\n    }\r\n}\r\n","import MODULE_ID from '~./src/module'\r\n\r\nexport function localize(key: string, data?: Record<string, string | number>) {\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (key: string, data?: Record<string, string>) => localize(`${subKey}.${key}`, data)\r\n    Object.defineProperty(fn, 'key', {\r\n        get() {\r\n            return subKey\r\n        },\r\n        enumerable: false,\r\n        configurable: false,\r\n    })\r\n    return fn as ((key: string, data?: Record<string, string>) => string) & { key: string }\r\n}\r\n","import { getFlag, setFlag } from './@utils/foundry/flags'\r\nimport { localize } from './@utils/foundry/i18n'\r\nimport { updateActorTokens } from './token'\r\nimport { formatUnknown, getSavedNames } from './utils'\r\n\r\n/**\r\n * @param {Actor | Combatant} doc\r\n * @returns {boolean} the current state of visibility\r\n */\r\nexport function playersSeeName(doc: Actor | Combatant): boolean {\r\n    if (doc instanceof Actor || !doc.actor) return !!getFlag(doc, 'showName')\r\n    return !!getFlag(doc.actor, 'showName')\r\n}\r\n\r\n/**\r\n * Toggles the state of visibility\r\n * This will trigger a refresh of different parts of the UI to reflect the new state\r\n *\r\n * @param {Actor | Combatant} doc\r\n * @returns {Promise<boolean>} a promise with the new state of visibility\r\n */\r\nexport async function toggleSeeName(doc: Actor | Combatant): Promise<boolean> {\r\n    const showName = !playersSeeName(doc)\r\n\r\n    if (doc instanceof Actor || !doc.actor) await setFlag(doc, 'showName', showName)\r\n    else await setFlag(doc.actor, 'showName', showName)\r\n\r\n    if (canvas.tokens.hud?.rendered) canvas.tokens.hud.render()\r\n\r\n    const actor = doc instanceof Actor ? doc : doc.actor\r\n    if (actor) updateActorTokens(actor, showName)\r\n\r\n    return showName\r\n}\r\n\r\n/**\r\n * @param {Actor | Combatant} doc\r\n * @returns {string} the replacement name with no regard for the current state of visibility\r\n */\r\nexport function getName(doc: Actor | Combatant): string {\r\n    const unknown = localize('unknown')\r\n    const type = doc instanceof Actor ? doc.type : doc.actor?.type\r\n    if (!type) return unknown\r\n\r\n    const saved = (getSavedNames()[type] ?? '').trim()\r\n    return saved || formatUnknown(unknown, type)\r\n}\r\n","import MODULE_ID from '~./src/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    // @ts-ignore\r\n    return !!doc.flags && MODULE_ID in doc.flags\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, ...keys: string[]) {\r\n    keys.unshift(key)\r\n    return doc.getFlag(MODULE_ID, keys.join('.')) as T | undefined\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n","import { getActorTokens } from './@utils/foundry/actor'\r\nimport { localize } from './@utils/foundry/i18n'\r\nimport { getSetting } from './@utils/foundry/settings'\r\nimport { playersSeeName, toggleSeeName } from './api'\r\n\r\nexport function updateActorTokens(actor: Actor, showName: boolean) {\r\n    if (actor.token) changeDisplayName(actor.token, showName)\r\n    else getActorTokens(actor, true).forEach(x => changeDisplayName(x, showName))\r\n}\r\n\r\nfunction changeDisplayName(token: TokenDocument, showName: boolean) {\r\n    if (showName) showTokenName(token)\r\n    else hideTokenName(token)\r\n}\r\n\r\nfunction isHidding(displayName: TokenDisplayMode) {\r\n    return !isShowing(displayName)\r\n}\r\n\r\nfunction isShowing(displayName: TokenDisplayMode) {\r\n    return displayName === CONST.TOKEN_DISPLAY_MODES.HOVER || displayName === CONST.TOKEN_DISPLAY_MODES.ALWAYS\r\n}\r\n\r\nfunction swapToHide(displayName: TokenDisplayMode) {\r\n    if (displayName === CONST.TOKEN_DISPLAY_MODES.HOVER) return CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER\r\n    if (displayName === CONST.TOKEN_DISPLAY_MODES.ALWAYS) return CONST.TOKEN_DISPLAY_MODES.OWNER\r\n    return displayName\r\n}\r\n\r\nfunction hideTokenName(token: TokenDocument) {\r\n    const displayName = token.displayName\r\n    if (isHidding(displayName)) return\r\n    const swap = swapToHide(displayName)\r\n    token.update({ displayName: swap })\r\n}\r\n\r\nfunction showTokenName(token: TokenDocument) {\r\n    const displayName = token.displayName\r\n    if (isShowing(displayName) || !getSetting('token')) return\r\n\r\n    let swap = displayName\r\n    if (swap === CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER) swap = CONST.TOKEN_DISPLAY_MODES.HOVER\r\n    else if (swap === CONST.TOKEN_DISPLAY_MODES.OWNER) swap = CONST.TOKEN_DISPLAY_MODES.ALWAYS\r\n\r\n    token.update({ displayName: swap })\r\n}\r\n\r\nexport function renderTokenHUD(hud: TokenHUD, html: JQuery) {\r\n    const actor = hud.object.actor\r\n    if (!actor || actor.hasPlayerOwner) return\r\n\r\n    const toggle = createToggle(actor)\r\n    toggle.addEventListener('click', () => toggleSeeName(actor))\r\n    html.find('.col.right').append(toggle)\r\n}\r\n\r\nfunction createToggle(actor: Actor) {\r\n    const tmp = document.createElement('template')\r\n    const toggled = playersSeeName(actor)\r\n\r\n    tmp.innerHTML = `<div class=\"control-icon${toggled ? ' active' : ''}\" data-action=\"anonymous-toggle\">\r\n    <i class=\"fa-solid fa-signature\" title=\"${localize('hud.title')}\"></i>\r\n</div>`\r\n\r\n    return tmp.content.firstChild as HTMLDivElement\r\n}\r\n\r\nexport function preCreateToken(token: TokenDocument) {\r\n    if (token.actor?.hasPlayerOwner) return\r\n    const displayName = token.displayName\r\n    const swap = swapToHide(displayName)\r\n    if (swap !== displayName) token._source.displayName = swap\r\n}\r\n","export function getActorTokens(actor: Actor, linkedOnly = false) {\r\n    return game.scenes.map(scene => getActorSceneTokens(scene, actor, linkedOnly)).flat()\r\n}\r\n\r\nexport function getActorSceneTokens(scene: Scene, actor: Actor, linkedOnly = false) {\r\n    return scene.tokens.filter(token => token.actorId === actor.id && (!linkedOnly || token.actorLink))\r\n}\r\n\r\nexport function getCharacterOwner(actor: Actor, connected = false) {\r\n    if (connected) return game.users.find(x => x.active && x.character === actor)\r\n    return game.users.find(x => x.character === actor)\r\n}\r\n","import { getSetting } from './@utils/foundry/settings'\r\nimport { capitalize } from './@utils/string'\r\n\r\nexport function refresh() {\r\n    ui.combat.render()\r\n}\r\n\r\nexport function getSavedNames() {\r\n    return getSetting('names') as Record<string, string>\r\n}\r\n\r\nexport function formatUnknown(unknown: string, type: string) {\r\n    return `${unknown} ${capitalize(type)}`\r\n}\r\n","import { localize } from '~src/@utils/foundry/i18n'\r\nimport { templatePath } from '~src/@utils/foundry/path'\r\nimport { setSetting } from '~src/@utils/foundry/settings'\r\nimport { getActorsTypes } from '~src/@utils/foundry/types'\r\nimport { formatUnknown, getSavedNames } from '~src/utils'\r\n\r\nexport class AnonymousNamesMenu extends FormApplication {\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'anonymous-names-menu',\r\n            title: localize('templates.names.title'),\r\n            template: templatePath('names.html'),\r\n            width: 400,\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const unknown = localize('unknown')\r\n        const saved = getSavedNames()\r\n        const types = getActorsTypes().map(x => ({\r\n            type: x,\r\n            value: (saved[x] ?? '').trim(),\r\n            placeholder: formatUnknown(unknown, x),\r\n        }))\r\n        return {\r\n            ...super.getData(options),\r\n            types,\r\n        }\r\n    }\r\n\r\n    activateListeners(html: JQuery) {\r\n        super.activateListeners(html)\r\n        html.find('[data-action=cancel]').on('click', () => this.close())\r\n    }\r\n\r\n    protected async _updateObject(event: Event, formData: Record<string, unknown>) {\r\n        setSetting('names', formData)\r\n    }\r\n}\r\n","export function getActorsTypes() {\r\n    return game.system.documentTypes.Actor\r\n}\r\n","import { getSetting } from './@utils/foundry/settings'\r\nimport { replaceHTMLText } from './@utils/jquery'\r\nimport { getName, playersSeeName } from './api'\r\nimport { thirdPartyChatParse } from './third'\r\n\r\nconst ESCAPE = /([\"'\\(\\)\\[\\]])/gm\r\n\r\nexport function renderChatMessage(message: ChatMessage, html: JQuery) {\r\n    if (message.blind) return\r\n\r\n    const isGM = game.user.isGM\r\n    const speaker = message.speaker\r\n    const actor = ChatMessage.getSpeakerActor(speaker)\r\n    const playersCanSee = !actor || actor.hasPlayerOwner || playersSeeName(actor)\r\n\r\n    if (actor && !playersCanSee) {\r\n        changeNames(message, actor, html)\r\n        if (!isGM) {\r\n            if (message.rolls.length && getSetting('rolls')) {\r\n                const $result = html.find('.message-content .dice-roll .dice-result')\r\n                $result.find('.dice-formula, .dice-tooltip').remove()\r\n                if (getSetting('criticals')) $result.find('.dice-total').removeClass('critical fumble')\r\n            }\r\n            if (getSetting('footer')) html.find('.message-content footer.card-footer').remove()\r\n            if (getSetting('cardContent')) html.find('.message-content .card-content').remove()\r\n        }\r\n    }\r\n\r\n    thirdPartyChatParse({ message, actor, $html: html, playersCanSee })\r\n}\r\n\r\nfunction changeNames(message: ChatMessage, actor: Actor, html: JQuery) {\r\n    const speaker = message.speaker\r\n    const names: Set<string> = new Set()\r\n\r\n    if (speaker.alias) names.add(speaker.alias)\r\n    if (actor.name) names.add(actor.name)\r\n\r\n    if (speaker.token && speaker.scene) {\r\n        const scene = game.scenes.get(speaker.scene)\r\n        const token = scene?.tokens.get(speaker.token)\r\n        if (token?.name) names.add(token.name)\r\n    }\r\n\r\n    if (!names.size) return\r\n\r\n    const escaped = Array.from(names).map(x => RegExp.escape(x))\r\n    const joined = escaped.join('|')\r\n    const regexp = new RegExp(`(${joined})`, 'gmi')\r\n    const renamed = getName(actor)\r\n    const replacement = game.user.isGM ? `<span class=\"anonymous-replaced\" title=\"${renamed}\">$1</span>` : renamed\r\n\r\n    replaceHTMLText(html, regexp, replacement)\r\n}\r\n","export function replaceHTMLText(html: JQuery, regexp: RegExp, replacement: string, addSelf = false) {\r\n    let $nodes = html.find('*')\r\n    if (addSelf) $nodes = $nodes.addBack()\r\n    $nodes.contents().each((_, el) => {\r\n        if (el.nodeType === Node.TEXT_NODE && el.textContent?.trim())\r\n            $(el).replaceWith(el.textContent.replace(regexp, replacement))\r\n    })\r\n}\r\n\r\nexport const fakeEvent = { preventDefault: () => {} }\r\n","import { getModule } from './@utils/foundry/module'\r\nimport { dnd5ParseChat } from './third/dnd5e'\r\nimport { pf2eInitHook, pf2eParseChat, pf2eReadyHook } from './third/pf2e'\r\nimport { wireParseChat } from './third/wire'\r\n\r\nexport interface ThirdPartyChatParseArgs {\r\n    playersCanSee: boolean\r\n    message: ChatMessage\r\n    actor: Actor | null\r\n    $html: JQuery\r\n}\r\n\r\nexport const thirdPartyInitHooks = createThirdPartyListener<[isGM: boolean]>()\r\nexport const thirdPartyReadyHooks = createThirdPartyListener<[isGM: boolean]>()\r\nexport const thirdPartyChatParse = createThirdPartyListener<[args: ThirdPartyChatParseArgs]>()\r\n\r\nexport function thirdPartyInitialization() {\r\n    switch (game.system.id) {\r\n        case 'pf2e':\r\n            thirdPartyInitHooks.add(pf2eInitHook)\r\n            thirdPartyReadyHooks.add(pf2eReadyHook)\r\n            thirdPartyChatParse.add(pf2eParseChat)\r\n            break\r\n        case 'dnd5e':\r\n            // thirdPartyInitHooks.add(dnd5InitHook)\r\n            thirdPartyChatParse.add(dnd5ParseChat)\r\n            break\r\n    }\r\n\r\n    if (getModule('wire')?.active) {\r\n        thirdPartyChatParse.add(wireParseChat)\r\n    }\r\n}\r\n\r\nfunction createThirdPartyListener<TArgs extends any[], TFunction extends (...args: TArgs) => void = (...args: TArgs) => void>() {\r\n    const a = [] as TFunction[]\r\n    const f = function (...args: TArgs) {\r\n        a.forEach(x => x(...args))\r\n    }\r\n    f.add = (fn: TFunction) => a.push(fn)\r\n    return f\r\n}\r\n","import { getSetting } from '~src/@utils/foundry/settings'\r\nimport { replaceHTMLText } from '~src/@utils/jquery'\r\nimport type { ThirdPartyChatParseArgs } from '~src/third'\r\n\r\nexport function dnd5ParseChat({ message, $html, playersCanSee }: ThirdPartyChatParseArgs) {\r\n    if (playersCanSee) return\r\n\r\n    const isGM = game.user.isGM\r\n\r\n    if (message.rolls.length && getSetting('criticals')) {\r\n        const critical = game.i18n.localize('DND5E.CriticalHit')\r\n        const powerful = game.i18n.localize('DND5E.PowerfulCritical')\r\n        const regexp = new RegExp(` (\\\\(([\\\\w ]*)?(?:${critical}|${powerful})([\\\\w ]*)?\\\\))$`, 'igm')\r\n        const $flavor = $html.find('header .flavor-text')\r\n        if (isGM) replaceHTMLText($flavor, regexp, ' <span class=\"anonymous-replaced\">$1</span>', true)\r\n        replaceHTMLText($flavor, regexp, '', true)\r\n    }\r\n}\r\n\r\nexport function dnd5InitHook(isGM: boolean) {}\r\n","import { getCurrentModule } from '~src/@utils/foundry/module'\r\nimport { warn } from '~src/@utils/foundry/notifications'\r\nimport { getSettingLocalizationPath } from '~src/@utils/foundry/path'\r\nimport { getSetting, registerSetting } from '~src/@utils/foundry/settings'\r\nimport { replaceHTMLText } from '~src/@utils/jquery'\r\nimport { playersSeeName } from '~src/api'\r\nimport type { ThirdPartyChatParseArgs } from '~src/third'\r\n\r\nexport function pf2eInitHook(isGM: boolean) {\r\n    registerSetting({\r\n        name: 'pf2e.traits',\r\n        type: String,\r\n        default: 'never',\r\n        config: true,\r\n        choices: {\r\n            never: getSettingLocalizationPath('pf2e.traits.choices.never'),\r\n            rolls: getSettingLocalizationPath('pf2e.traits.choices.rolls'),\r\n            always: getSettingLocalizationPath('pf2e.traits.choices.always'),\r\n        },\r\n    })\r\n}\r\n\r\n/** @type {ThirdPartyHook} */\r\nexport function pf2eReadyHook(isGM: boolean) {\r\n    if (isGM) disableSettings()\r\n}\r\n\r\nfunction disableSettings() {\r\n    let key = ''\r\n    if (game.settings.settings.has('pf2e.metagame.tokenSetsNameVisibility')) key = 'metagame.tokenSetsNameVisibility'\r\n    else if (game.settings.settings.has('pf2e.metagame_tokenSetsNameVisibility')) key = 'metagame_tokenSetsNameVisibility'\r\n    if (!key || !game.settings.get('pf2e', key)) return\r\n\r\n    const module = getCurrentModule().title\r\n    const setting = game.i18n.localize('PF2E.SETTINGS.Metagame.TokenSetsNameVisibility.Name')\r\n\r\n    game.settings.set('pf2e', key, false)\r\n    warn('pf2e.disabled', { module, setting }, true)\r\n}\r\n\r\nexport function pf2eParseChat({ message, playersCanSee, $html }: ThirdPartyChatParseArgs) {\r\n    const isGM = game.user.isGM\r\n    const target = (message as ChatMessagePF2e).target?.actor\r\n    const criticals = getSetting('criticals')\r\n    const rolls = getSetting('rolls')\r\n\r\n    if (target && !target.hasPlayerOwner && !playersSeeName(target)) {\r\n        const $targets = $html.find('.flavor-text .target-dc [data-whose=\"target\"]')\r\n        if ($targets.length) {\r\n            const $target = $targets.first()\r\n            if (isGM) $target.attr('data-visibility', 'gm')\r\n            else $target.remove()\r\n        }\r\n    }\r\n\r\n    if (!isGM && !playersCanSee) {\r\n        const traits = getSetting('pf2e.traits')\r\n\r\n        if (message.rolls.length) {\r\n            if (rolls) {\r\n                const $tags = $html.find('.flavor-text hr + .tags')\r\n\r\n                if ($tags.length) {\r\n                    $tags.prev('hr').remove()\r\n                    $tags.remove()\r\n                }\r\n\r\n                if (criticals) {\r\n                    $html.find('.message-content .dice-roll .dice-result .dice-total').removeClass('success failure')\r\n                }\r\n\r\n                if (traits !== 'never') {\r\n                    $html.find('.flavor-text .tags').remove()\r\n                }\r\n            } else if (traits === 'always') {\r\n                $html.find('.flavor-text .tags').first().remove()\r\n            }\r\n        } else if (traits === 'always') {\r\n            $html.find('.message-content section.tags').remove()\r\n        }\r\n    }\r\n\r\n    if (!playersCanSee && message.rolls.length && rolls && criticals) {\r\n        const critical = game.i18n.localize('PF2E.Check.Result.Degree.Attack.criticalSuccess')\r\n        const hit = game.i18n.localize('PF2E.Check.Result.Degree.Attack.success')\r\n        const regex = new RegExp(`(\\\\((${critical}|${hit})\\\\))`, 'gmi')\r\n        const str = isGM ? '<span class=\"anonymous-replaced\">$1</span>' : ''\r\n        const flavor = $html.find('header .flavor-text')\r\n        replaceHTMLText(flavor, regex, str, true)\r\n    }\r\n}\r\n","import { localize } from './i18n'\r\n\r\nexport function notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(str: string, arg1?: boolean | Record<string, string>, arg2?: boolean) {\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(str: string, arg1?: boolean | Record<string, string>, arg2?: boolean) {\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(str: string, arg1?: boolean | Record<string, string>, arg2?: boolean) {\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { getSetting } from '~src/@utils/foundry/settings'\r\nimport { getName, playersSeeName } from '~src/api'\r\nimport { ThirdPartyChatParseArgs } from '~src/third'\r\n\r\nconst SAVE = /\\(dc \\d+\\)/gim\r\n\r\nexport function wireParseChat({ message, playersCanSee, $html }: ThirdPartyChatParseArgs) {\r\n    if (game.user.isGM) return\r\n\r\n    if (!playersCanSee) {\r\n        if (getSetting('rolls')) {\r\n            const $tooltips = $html.find('.dice-tooltip')\r\n            $tooltips.empty()\r\n            $tooltips.css('padding-top', 0)\r\n\r\n            if (getSetting('criticals')) {\r\n                $html.find('.dice-total').removeClass('critical fumble')\r\n            }\r\n\r\n            const $save = $html.find('.phase-saving-throws .phase-heading')\r\n            $save.text($save.text().replace(SAVE, ''))\r\n        }\r\n    }\r\n\r\n    // target\r\n\r\n    const $target = $html.find('.phase-attack .token-info .token-name')\r\n    const targetUUID = message.getFlag('wire', 'activation.attack.targetActorUuid') as string | undefined\r\n    if ($target.length && targetUUID) {\r\n        try {\r\n            const target = (fromUuidSync(targetUUID) as TokenDocument | null)?.actor\r\n            if (target && !target.hasPlayerOwner && !playersSeeName(target)) {\r\n                $target.text(getName(target))\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const $targets = $html.find('.phase-saving-throws .saving-throw-target:has(.target-name)')\r\n    const targetsUUID = message.getFlag('wire', 'activation.targetUuids') as string[] | undefined\r\n    if ($targets.length && targetsUUID?.length) {\r\n        try {\r\n            for (const uuid of targetsUUID) {\r\n                const target = (fromUuidSync(uuid) as TokenDocument | null)?.actor\r\n                if (target && !target.hasPlayerOwner && !playersSeeName(target)) {\r\n                    $targets.filter(`[data-actor-id=\"${uuid}\"]`).find('.target-name').text(getName(target))\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n}\r\n","import { getSameCombatants } from './@utils/foundry/combatant'\r\nimport { localize } from './@utils/foundry/i18n'\r\nimport { getName, playersSeeName, toggleSeeName } from './api'\r\n\r\nexport function renderCombatTracker(tracker: CombatTracker<Combat>, html: JQuery) {\r\n    const combatants = ui.combat.viewed?.combatants\r\n    if (!combatants || !combatants.size) return\r\n\r\n    html.find('#combat-tracker .combatant').each(function () {\r\n        const id = this.dataset.combatantId as string\r\n        const combatant = combatants.get(id)\r\n        if (!combatant || combatant.hasPlayerOwner) return\r\n\r\n        const showName = playersSeeName(combatant)\r\n\r\n        if (game.user.isGM) {\r\n            const controls = this.querySelector('.combatant-controls') as HTMLElement\r\n            const hidden = controls.querySelector('.combatant-control[data-control=\"toggleHidden\"]')\r\n            const toggle = createToggle(showName)\r\n\r\n            toggle.addEventListener('click', event => toggleCombatantName(event, combatant))\r\n\r\n            if (hidden) hidden.after(toggle)\r\n            else controls.appendChild(toggle)\r\n        } else if (!showName) {\r\n            const h4 = this.querySelector('h4') as HTMLElement\r\n            h4.textContent = getName(combatant)\r\n        }\r\n    })\r\n}\r\n\r\nfunction createToggle(active: boolean) {\r\n    const tmp = document.createElement('template')\r\n    const tooltip = active ? 'context.hide' : 'context.show'\r\n\r\n    tmp.innerHTML = `<a\r\n    class=\"combatant-control${active ? ' active' : ''}\"\r\n    data-control=\"toggle-name-visibility\"\r\n    data-tooltip=\"${localize(tooltip)}\"\r\n>\r\n    <i class=\"fa-solid fa-signature\"></i>\r\n</a>`\r\n\r\n    return tmp.content.firstChild as HTMLAnchorElement\r\n}\r\n\r\nfunction toggleCombatantName(event: MouseEvent, combatant: Combatant) {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n\r\n    if (event.shiftKey && combatant.actor && combatant.actor.isToken && game.combat?.scene) {\r\n        getSameCombatants(combatant).forEach(toggleSeeName)\r\n    } else {\r\n        toggleSeeName(combatant)\r\n    }\r\n}\r\n","export function getSameCombatants(combatant: Combatant) {\r\n    return combatant.combat.turns.filter(x => x.actorId === combatant.actorId)\r\n}\r\n"],"names":[],"version":3,"file":"main.js.map"}